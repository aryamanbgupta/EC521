<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="10" tests="10" time="0.0">
	<testsuite disabled="0" errors="0" failures="10" name="semgrep results" skipped="0" tests="10" time="0">
		<testcase name="javascript.browser.security.eval-detected.eval-detected" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/lib.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/lib.js" line="84">
			<failure type="WARNING" message="Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.">    const tryEval = (str) =&gt; eval(`const a = ${str}; a`);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/lib.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/lib.js" line="116">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                const file = path.join(settings.targetDirectory, fileName);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/lib.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/lib.js" line="116">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                const file = path.join(settings.targetDirectory, fileName);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/settings.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/settings.js" line="60">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            const dir = path.join(settings.targetDirectory, (0, utils_1.snakeCase)(settings.model.className));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/settings.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/settings.js" line="60">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            const dir = path.join(settings.targetDirectory, (0, utils_1.snakeCase)(settings.model.className));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/settings.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/settings.js" line="63">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            const models = path.join(settings.targetDirectory, 'models');
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/file-manager.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/file-manager.js" line="64">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                const f = path.join(dir, file);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/file-manager.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/file-manager.js" line="64">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                const f = path.join(dir, file);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/terminal.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/terminal.js" line="27">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    const names = path.join(dir, lastDirectory.toLowerCase()).split(path.sep);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/terminal.js" file="/Users/zta/Documents/EC521/src/unzipped/hirantha-json-to-dart-3.5.8/extension/out/utils/terminal.js" line="27">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    const names = path.join(dir, lastDirectory.toLowerCase()).split(path.sep);
</failure>
		</testcase>
	</testsuite>
</testsuites>
