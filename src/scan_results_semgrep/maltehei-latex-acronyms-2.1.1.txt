<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="4" tests="4" time="0.0">
	<testsuite disabled="0" errors="0" failures="4" name="semgrep results" skipped="0" tests="4" time="0">
		<testcase name="javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp" classname="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/trigger-patterns.js" file="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/trigger-patterns.js" line="24">
			<failure type="WARNING" message="RegExp() called with a `p` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.">        return patterns.map(p =&gt; `\\\\${p}{`).map(p =&gt; new RegExp(p, 'i'));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring" classname="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/logger.js" file="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/logger.js" line="9">
			<failure type="INFO" message="Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.">            console.log(`[${extension_1.EXTENSION_NAME}]`, '[DEBUG]', ...msg);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring" classname="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/logger.js" file="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/logger.js" line="13">
			<failure type="INFO" message="Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.">        console.log(`[${extension_1.EXTENSION_NAME}]`, '[LOG]', ...msg);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring" classname="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/logger.js" file="/Users/zta/Documents/EC521/src/unzipped/maltehei-latex-acronyms-2.1.1/extension/out/logger.js" line="16">
			<failure type="INFO" message="Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.">        console.error(`[${extension_1.EXTENSION_NAME}]`, '[ERROR]', ...msg);
</failure>
		</testcase>
	</testsuite>
</testsuites>
