<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="9" tests="9" time="0.0">
	<testsuite disabled="0" errors="0" failures="9" name="semgrep results" skipped="0" tests="9" time="0">
		<testcase name="javascript.browser.security.eval-detected.eval-detected" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/parser/parseArray.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/parser/parseArray.js" line="67">
			<failure type="WARNING" message="Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.">        return eval(ctx.toString());
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/generateUniqueSortModuleName.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/generateUniqueSortModuleName.js" line="27">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    const modulePath = path.join(globalStoragePath, moduleName);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/generateUniqueSortModuleName.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/generateUniqueSortModuleName.js" line="27">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    const modulePath = path.join(globalStoragePath, moduleName);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" line="111">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                            fs.renameSync(modulePath, path.join(extensionContext.globalStoragePath, newModuleName));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" line="111">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                            fs.renameSync(modulePath, path.join(extensionContext.globalStoragePath, newModuleName));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" line="151">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            .map((module) =&gt; ({ module, modulePath: path.join(extensionContext.globalStoragePath, module) }))
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" line="151">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            .map((module) =&gt; ({ module, modulePath: path.join(extensionContext.globalStoragePath, module) }))
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" line="197">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        const modulePath = path.join(extensionContext.globalStoragePath, moduleName);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" file="/Users/zta/Documents/EC521/src/unzipped/fvclaus-sort-json-array-3.1.0/extension/out/sortCustom/index.js" line="197">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        const modulePath = path.join(extensionContext.globalStoragePath, moduleName);
</failure>
		</testcase>
	</testsuite>
</testsuites>
