<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="7" tests="7" time="0.0">
	<testsuite disabled="0" errors="0" failures="7" name="semgrep results" skipped="0" tests="7" time="0">
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/extend/toolbar/toolbar.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/extend/toolbar/toolbar.js" line="53">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        http &amp;&amp; (http.innerHTML = server.http.length.toString());
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/extend/toolbar/toolbar.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/extend/toolbar/toolbar.js" line="54">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        websocket &amp;&amp; (websocket.innerHTML = server.websocket.length.toString());
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/sample/index.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/sample/index.js" line="128">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        container.innerHTML = '&lt;div class=&quot;message-title&quot;&gt;&lt;span&gt;' + time + '&lt;/span&gt;&lt;span style=&quot;margin-left:3px&quot;&gt;' +
            model + '&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;message-body&quot;&gt;' + (type === 1 ? '[Server] ' : '&lt;span style=&quot;color:red&quot;&gt;[Error] &lt;/span&gt;') + data + '&lt;/div&gt;';
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/utils/index.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/utils/index.js" line="117">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            let truePath = path.resolve(rootPath, dirPath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/utils/index.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/utils/index.js" line="117">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            let truePath = path.resolve(rootPath, dirPath);
</failure>
		</testcase>
		<testcase name="javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/server/index.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/server/index.js" line="50">
			<failure type="INFO" message="A CSRF middleware was not detected in your express application. Ensure you are either using one  such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.">                const app = express();
</failure>
		</testcase>
		<testcase name="javascript.lang.security.detect-insecure-websocket.detect-insecure-websocket" classname="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/sample/index.js" file="/Users/zta/Documents/EC521/src/unzipped/ihuke-devServer-0.0.4/extension/sample/index.js" line="85">
			<failure type="ERROR" message="Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.">            client = create('ws://localhost:8090');
</failure>
		</testcase>
	</testsuite>
</testsuites>
