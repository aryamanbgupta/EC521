<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="5" tests="5" time="0.0">
	<testsuite disabled="0" errors="0" failures="5" name="semgrep results" skipped="0" tests="5" time="0">
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/downloader.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/downloader.js" line="151">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return pathHelper.resolve(str);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/extension.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/extension.js" line="50">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                checkerPath = path.join(frameworkPath, strings.Misc.checkerRelPath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/findjava.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/findjava.js" line="17">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            let binpath = path.join(workspaces[i], 'bin', binname);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/findjava.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/findjava.js" line="27">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            let binpath = path.join(pathparts[i], binname);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/installer.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/zhangjiangqige-checkerframework-language-server-0.2.0/extension/out/installer.js" line="83">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return path.resolve(str);
</failure>
		</testcase>
	</testsuite>
</testsuites>

