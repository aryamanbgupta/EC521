<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="19" tests="19" time="0.0">
	<testsuite disabled="0" errors="0" failures="19" name="semgrep results" skipped="0" tests="19" time="0">
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/main.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/main.js" line="6">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        document.querySelector('.navigation').innerHTML = sidebar;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" line="205">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">				env.element.innerHTML = env.highlightedCode;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" line="221">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">			env.element.innerHTML = env.highlightedCode;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" line="1555">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">		env.element.innerHTML = env.highlightedCode;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" line="2474">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">		env.element.innerHTML = env.highlightedCode;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" line="3259">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">		env.element.innerHTML = env.highlightedCode;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/prism.js" line="3692">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">	lineNumbersWrapper.innerHTML = lines;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/index.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/index.js" line="1">
			<failure type="WARNING" message="No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).">!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){&quot;undefined&quot;!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:&quot;Module&quot;}),Object.defineProperty(e,&quot;__esModule&quot;,{value:!0})},n.t=function(e,t){if(1&amp;t&amp;&amp;(e=n(e)),8&amp;t)return e;if(4&amp;t&amp;&amp;&quot;object&quot;==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,&quot;default&quot;,{enumerable:!0,value:e}),2&amp;t&amp;&amp;&quot;string&quot;!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return n.d(t,&quot;a&quot;,t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=&quot;&quot;,n(n.s=2)}([function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.getSettings=t.getData=void 0;let o=void 0;function r(e){const t=document.getElementById(&quot;vscode-markdown-preview-data&quot;);if(t){const n=t.getAttribute(e);if(n)return JSON.parse(n)}throw new Error(&quot;Could not load data for &quot;+e)}t.getData=r,t.getSettings=function(){if(o)return o;if(o=r(&quot;data-settings&quot;),o)return o;throw new Error(&quot;Could not load settings&quot;)}},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.getLineElementForFragment=t.getEditorLineNumberForPageOffset=t.scrollToRevealSourceLine=t.getLineElementsAtPageOffset=t.getElementsForSourceLine=void 0;const o=n(0);function r(e){return t=0,n=o.getSettings().lineCount-1,r=e,Math.min(n,Math.max(t,r));var t,n,r}const i=(()=&gt;{let e;return()=&gt;{if(!e){e=[{element:document.body,line:0}];for(const t of document.getElementsByClassName(&quot;code-line&quot;)){const n=+t.getAttribute(&quot;data-line&quot;);isNaN(n)||(&quot;CODE&quot;===t.tagName&amp;&amp;t.parentElement&amp;&amp;&quot;PRE&quot;===t.parentElement.tagName?e.push({element:t.parentElement,line:n}):e.push({element:t,line:n}))}}return e}})();function s(e){const t=Math.floor(e),n=i();let o=n[0]||null;for(const e of n){if(e.line===t)return{previous:e,next:void 0};if(e.line&gt;t)return{previous:o,next:e};o=e}return{previous:o}}function a(e){const t=i(),n=e-window.scrollY;let o=-1,r=t.length-1;for(;o+1&lt;r;){const e=Math.floor((o+r)/2),i=c(t[e]);i.top+i.height&gt;=n?r=e:o=e}const s=t[r],a=c(s);if(r&gt;=1&amp;&amp;a.top&gt;n){return{previous:t[o],next:s}}return r&gt;1&amp;&amp;r&lt;t.length&amp;&amp;a.top+a.height&gt;n?{previous:s,next:t[r+1]}:{previous:s}}function c({element:e}){const t=e.getBoundingClientRect(),n=e.querySelector(&quot;.code-line&quot;);if(n){const e=n.getBoundingClientRect(),o=Math.max(1,e.top-t.top);return{top:t.top,height:o}}return t}t.getElementsForSourceLine=s,t.getLineElementsAtPageOffset=a,t.scrollToRevealSourceLine=function(e){if(!o.getSettings().scrollPreviewWithEditor)return;if(e&lt;=0)return void window.scroll(window.scrollX,0);const{previous:t,next:n}=s(e);if(!t)return;let r=0;const i=c(t),a=i.top;if(n&amp;&amp;n.line!==t.line){r=a+(e-t.line)/(n.line-t.line)*(n.element.getBoundingClientRect().top-a)}else{const t=e-Math.floor(e);r=a+i.height*t}r=Math.abs(r)&lt;1?Math.sign(r):r,window.scroll(window.scrollX,Math.max(1,window.scrollY+r))},t.getEditorLineNumberForPageOffset=function(e){const{previous:t,next:n}=a(e);if(t){const o=c(t),i=e-window.scrollY-o.top;if(n){const e=i/(c(n).top-o.top);return r(t.line+e*(n.line-t.line))}{const e=i/o.height;return r(t.line+e)}}return null},t.getLineElementForFragment=function(e){return i().find(t=&gt;t.element.id===e)}},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0});const o=n(3),r=n(4),i=n(5),s=n(1),a=n(0),c=n(6);let l=0;const u=new o.ActiveLineMarker,d=a.getSettings(),f=acquireVsCodeApi(),g=f.getState(),m={...&quot;object&quot;==typeof g?g:{},...a.getData(&quot;data-state&quot;)};f.setState(m);const p=i.createPosterForVsCode(f);function v(e){const t=document.getElementsByTagName(&quot;img&quot;);if(t.length&gt;0){const n=Array.from(t,e=&gt;e.complete?Promise.resolve():new Promise(t=&gt;{e.addEventListener(&quot;load&quot;,()=&gt;t()),e.addEventListener(&quot;error&quot;,()=&gt;t())}));Promise.all(n).then(()=&gt;setTimeout(e,0))}else setTimeout(e,0)}window.cspAlerter.setPoster(p),window.styleLoadingMonitor.setPoster(p),window.onload=()=&gt;{w()},r.onceDocumentLoaded(()=&gt;{const e=m.scrollProgress;&quot;number&quot;!=typeof e||d.fragment?d.scrollPreviewWithEditor&amp;&amp;v(()=&gt;{if(d.fragment){m.fragment=void 0,f.setState(m);const e=s.getLineElementForFragment(d.fragment);e&amp;&amp;(l+=1,s.scrollToRevealSourceLine(e.line))}else isNaN(d.line)||(l+=1,s.scrollToRevealSourceLine(d.line))}):v(()=&gt;{l+=1,window.scrollTo(0,e*document.body.clientHeight)})});const h=(()=&gt;{const e=c(e=&gt;{l+=1,v(()=&gt;s.scrollToRevealSourceLine(e))},50);return t=&gt;{isNaN(t)||(m.line=t,e(t))}})();let w=c(()=&gt;{const e=[];let t=document.getElementsByTagName(&quot;img&quot;);if(t){let n;for(n=0;n&lt;t.length;n++){const o=t[n];o.classList.contains(&quot;loading&quot;)&amp;&amp;o.classList.remove(&quot;loading&quot;),e.push({id:o.id,height:o.height,width:o.width})}p.postMessage(&quot;cacheImageSizes&quot;,e)}},50);window.addEventListener(&quot;resize&quot;,()=&gt;{l+=1,y(),w()},!0),window.addEventListener(&quot;message&quot;,e=&gt;{if(e.data.source===d.source)switch(e.data.type){case&quot;onDidChangeTextEditorSelection&quot;:u.onDidChangeTextEditorSelection(e.data.line);break;case&quot;updateView&quot;:h(e.data.line)}},!1),document.addEventListener(&quot;dblclick&quot;,e=&gt;{if(!d.doubleClickToSwitchToEditor)return;for(let t=e.target;t;t=t.parentNode)if(&quot;A&quot;===t.tagName)return;const t=e.pageY,n=s.getEditorLineNumberForPageOffset(t);&quot;number&quot;!=typeof n||isNaN(n)||p.postMessage(&quot;didClick&quot;,{line:Math.floor(n)})});const b=[&quot;http:&quot;,&quot;https:&quot;,&quot;mailto:&quot;,&quot;vscode:&quot;,&quot;vscode-insiders:&quot;];function y(){m.scrollProgress=window.scrollY/document.body.clientHeight,f.setState(m)}document.addEventListener(&quot;click&quot;,e=&gt;{if(!e)return;let t=e.target;for(;t;){if(t.tagName&amp;&amp;&quot;A&quot;===t.tagName&amp;&amp;t.href){if(t.getAttribute(&quot;href&quot;).startsWith(&quot;#&quot;))return;let n=t.getAttribute(&quot;data-href&quot;);if(!n){if(b.some(e=&gt;t.href.startsWith(e)))return;n=t.getAttribute(&quot;href&quot;)}return/^[a-z\-]+:/i.test(n)?void 0:(p.postMessage(&quot;openLink&quot;,{href:n}),e.preventDefault(),void e.stopPropagation())}t=t.parentNode}},!0),window.addEventListener(&quot;scroll&quot;,c(()=&gt;{if(y(),l&gt;0)l-=1;else{const e=s.getEditorLineNumberForPageOffset(window.scrollY);&quot;number&quot;!=typeof e||isNaN(e)||p.postMessage(&quot;revealLine&quot;,{line:e})}},50))},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.ActiveLineMarker=void 0;const o=n(1);t.ActiveLineMarker=class{onDidChangeTextEditorSelection(e){const{previous:t}=o.getElementsForSourceLine(e);this._update(t&amp;&amp;t.element)}_update(e){this._unmarkActiveElement(this._current),this._markActiveElement(e),this._current=e}_unmarkActiveElement(e){e&amp;&amp;(e.className=e.className.replace(/\bcode-active-line\b/g,&quot;&quot;))}_markActiveElement(e){e&amp;&amp;(e.className+=&quot; code-active-line&quot;)}}},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.onceDocumentLoaded=void 0,t.onceDocumentLoaded=function(e){&quot;loading&quot;===document.readyState||&quot;uninitialized&quot;===document.readyState?document.addEventListener(&quot;DOMContentLoaded&quot;,e):e()}},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.createPosterForVsCode=void 0;const o=n(0);t.createPosterForVsCode=e=&gt;new class{postMessage(t,n){e.postMessage({type:t,source:o.getSettings().source,body:n})}}},function(e,t,n){(function(t){var n=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,i=/^0o[0-7]+$/i,s=parseInt,a=&quot;object&quot;==typeof t&amp;&amp;t&amp;&amp;t.Object===Object&amp;&amp;t,c=&quot;object&quot;==typeof self&amp;&amp;self&amp;&amp;self.Object===Object&amp;&amp;self,l=a||c||Function(&quot;return this&quot;)(),u=Object.prototype.toString,d=Math.max,f=Math.min,g=function(){return l.Date.now()};function m(e,t,n){var o,r,i,s,a,c,l=0,u=!1,m=!1,h=!0;if(&quot;function&quot;!=typeof e)throw new TypeError(&quot;Expected a function&quot;);function w(t){var n=o,i=r;return o=r=void 0,l=t,s=e.apply(i,n)}function b(e){return l=e,a=setTimeout(E,t),u?w(e):s}function y(e){var n=e-c;return void 0===c||n&gt;=t||n&lt;0||m&amp;&amp;e-l&gt;=i}function E(){var e=g();if(y(e))return L(e);a=setTimeout(E,function(e){var n=t-(e-c);return m?f(n,i-(e-l)):n}(e))}function L(e){return a=void 0,h&amp;&amp;o?w(e):(o=r=void 0,s)}function S(){var e=g(),n=y(e);if(o=arguments,r=this,c=e,n){if(void 0===a)return b(c);if(m)return a=setTimeout(E,t),w(c)}return void 0===a&amp;&amp;(a=setTimeout(E,t)),s}return t=v(t)||0,p(n)&amp;&amp;(u=!!n.leading,i=(m=&quot;maxWait&quot;in n)?d(v(n.maxWait)||0,t):i,h=&quot;trailing&quot;in n?!!n.trailing:h),S.cancel=function(){void 0!==a&amp;&amp;clearTimeout(a),l=0,o=c=r=a=void 0},S.flush=function(){return void 0===a?s:L(g())},S}function p(e){var t=typeof e;return!!e&amp;&amp;(&quot;object&quot;==t||&quot;function&quot;==t)}function v(e){if(&quot;number&quot;==typeof e)return e;if(function(e){return&quot;symbol&quot;==typeof e||function(e){return!!e&amp;&amp;&quot;object&quot;==typeof e}(e)&amp;&amp;&quot;[object Symbol]&quot;==u.call(e)}(e))return NaN;if(p(e)){var t=&quot;function&quot;==typeof e.valueOf?e.valueOf():e;e=p(t)?t+&quot;&quot;:t}if(&quot;string&quot;!=typeof e)return 0===e?e:+e;e=e.replace(n,&quot;&quot;);var a=r.test(e);return a||i.test(e)?s(e.slice(2),a?2:8):o.test(e)?NaN:+e}e.exports=function(e,t,n){var o=!0,r=!0;if(&quot;function&quot;!=typeof e)throw new TypeError(&quot;Expected a function&quot;);return p(n)&amp;&amp;(o=&quot;leading&quot;in n?!!n.leading:o,r=&quot;trailing&quot;in n?!!n.trailing:r),m(e,t,{leading:o,maxWait:t,trailing:r})}}).call(this,n(7))},function(e,t){var n;n=function(){return this}();try{n=n||new Function(&quot;return this&quot;)()}catch(e){&quot;object&quot;==typeof window&amp;&amp;(n=window)}e.exports=n}]);</failure>
		</testcase>
		<testcase name="javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/pre.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/media/pre.js" line="1">
			<failure type="WARNING" message="No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).">!function(e){var t={};function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){&quot;undefined&quot;!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:&quot;Module&quot;}),Object.defineProperty(e,&quot;__esModule&quot;,{value:!0})},n.t=function(e,t){if(1&amp;t&amp;&amp;(e=n(e)),8&amp;t)return e;if(4&amp;t&amp;&amp;&quot;object&quot;==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,&quot;default&quot;,{enumerable:!0,value:e}),2&amp;t&amp;&amp;&quot;string&quot;!=typeof e)for(var s in e)n.d(o,s,function(t){return e[t]}.bind(null,s));return o},n.n=function(e){var t=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return n.d(t,&quot;a&quot;,t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=&quot;&quot;,n(n.s=8)}([function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.getSettings=t.getData=void 0;let o=void 0;function s(e){const t=document.getElementById(&quot;vscode-markdown-preview-data&quot;);if(t){const n=t.getAttribute(e);if(n)return JSON.parse(n)}throw new Error(&quot;Could not load data for &quot;+e)}t.getData=s,t.getSettings=function(){if(o)return o;if(o=s(&quot;data-settings&quot;),o)return o;throw new Error(&quot;Could not load settings&quot;)}},,,,,,,,function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0});const o=n(9),s=n(11);window.cspAlerter=new o.CspAlerter,window.styleLoadingMonitor=new s.StyleLoadingMonitor},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.CspAlerter=void 0;const o=n(0),s=n(10);t.CspAlerter=class{constructor(){this.didShow=!1,this.didHaveCspWarning=!1,document.addEventListener(&quot;securitypolicyviolation&quot;,()=&gt;{this.onCspWarning()}),window.addEventListener(&quot;message&quot;,e=&gt;{e&amp;&amp;e.data&amp;&amp;&quot;vscode-did-block-svg&quot;===e.data.name&amp;&amp;this.onCspWarning()})}setPoster(e){this.messaging=e,this.didHaveCspWarning&amp;&amp;this.showCspWarning()}onCspWarning(){this.didHaveCspWarning=!0,this.showCspWarning()}showCspWarning(){const e=s.getStrings(),t=o.getSettings();if(this.didShow||t.disableSecurityWarnings||!this.messaging)return;this.didShow=!0;const n=document.createElement(&quot;a&quot;);n.innerText=e.cspAlertMessageText,n.setAttribute(&quot;id&quot;,&quot;code-csp-warning&quot;),n.setAttribute(&quot;title&quot;,e.cspAlertMessageTitle),n.setAttribute(&quot;role&quot;,&quot;button&quot;),n.setAttribute(&quot;aria-label&quot;,e.cspAlertMessageLabel),n.onclick=()=&gt;{this.messaging.postMessage(&quot;showPreviewSecuritySelector&quot;,{source:t.source})},document.body.appendChild(n)}}},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.getStrings=void 0,t.getStrings=function(){const e=document.getElementById(&quot;vscode-markdown-preview-data&quot;);if(e){const t=e.getAttribute(&quot;data-strings&quot;);if(t)return JSON.parse(t)}throw new Error(&quot;Could not load strings&quot;)}},function(e,t,n){&quot;use strict&quot;;Object.defineProperty(t,&quot;__esModule&quot;,{value:!0}),t.StyleLoadingMonitor=void 0;t.StyleLoadingMonitor=class{constructor(){this.unloadedStyles=[],this.finishedLoading=!1;const e=e=&gt;{const t=e.target.dataset.source;this.unloadedStyles.push(t)};window.addEventListener(&quot;DOMContentLoaded&quot;,()=&gt;{for(const t of document.getElementsByClassName(&quot;code-user-style&quot;))t.dataset.source&amp;&amp;(t.onerror=e)}),window.addEventListener(&quot;load&quot;,()=&gt;{this.unloadedStyles.length&amp;&amp;(this.finishedLoading=!0,this.poster&amp;&amp;this.poster.postMessage(&quot;previewStyleLoadError&quot;,{unloadedStyles:this.unloadedStyles}))})}setPoster(e){this.poster=e,this.finishedLoading&amp;&amp;e.postMessage(&quot;previewStyleLoadError&quot;,{unloadedStyles:this.unloadedStyles})}}}]);</failure>
		</testcase>
		<testcase name="javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/preview-src/csp.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/preview-src/csp.js" line="20">
			<failure type="WARNING" message="No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).">        window.addEventListener('message', (event) =&gt; {
            if (event &amp;&amp; event.data &amp;&amp; event.data.name === 'vscode-did-block-svg') {
                this.onCspWarning();
            }
        });
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/preview-src/index.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/preview-src/index.js" line="113">
			<failure type="WARNING" message="No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).">window.addEventListener('message', event =&gt; {
    if (event.data.source !== settings.source) {
        return;
    }
    switch (event.data.type) {
        case 'onDidChangeTextEditorSelection':
            marker.onDidChangeTextEditorSelection(event.data.line);
            break;
        case 'updateView':
            onUpdateView(event.data.line);
            break;
    }
}, false);
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/preview-src/csp.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/preview-src/csp.js" line="20">
			<failure type="WARNING" message="No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).">        window.addEventListener('message', (event) =&gt; {
            if (event &amp;&amp; event.data &amp;&amp; event.data.name === 'vscode-did-block-svg') {
                this.onCspWarning();
            }
        });
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/preview-src/index.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/preview-src/index.js" line="113">
			<failure type="WARNING" message="No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).">window.addEventListener('message', event =&gt; {
    if (event.data.source !== settings.source) {
        return;
    }
    switch (event.data.type) {
        case 'onDidChangeTextEditorSelection':
            marker.onDidChangeTextEditorSelection(event.data.line);
            break;
        case 'updateView':
            onUpdateView(event.data.line);
            break;
    }
}, false);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/src/features/preview.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/src/features/preview.js" line="297">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                hrefPath = path.join(path.dirname(this.resource.fsPath), hrefPath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/src/features/previewContentProvider.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/src/features/previewContentProvider.js" line="125">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return resourceProvider.asWebviewUri(vscode.Uri.file(path.join(path.dirname(resource.fsPath), href))).toString();
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/src/features/previewContentProvider.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/out/src/features/previewContentProvider.js" line="125">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return resourceProvider.asWebviewUri(vscode.Uri.file(path.join(path.dirname(resource.fsPath), href))).toString();
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/src/features/preview.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/src/features/preview.js" line="297">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                hrefPath = path.join(path.dirname(this.resource.fsPath), hrefPath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/src/features/previewContentProvider.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/src/features/previewContentProvider.js" line="125">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return resourceProvider.asWebviewUri(vscode.Uri.file(path.join(path.dirname(resource.fsPath), href))).toString();
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/src/features/previewContentProvider.js" file="/Users/zta/Docs/EC521/EC521/src/unzipped/salesforce-salesforce-docs-markdown-preview-1.3.3/extension/salesforce-docs-markdown-preview-1.3.7/extension/out/src/features/previewContentProvider.js" line="125">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return resourceProvider.asWebviewUri(vscode.Uri.file(path.join(path.dirname(resource.fsPath), href))).toString();
</failure>
		</testcase>
	</testsuite>
</testsuites>

