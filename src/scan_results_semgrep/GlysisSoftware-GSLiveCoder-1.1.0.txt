<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="5" tests="5" time="0.0">
	<testsuite disabled="0" errors="0" failures="5" name="semgrep results" skipped="0" tests="5" time="0">
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" file="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" line="26">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        const testPath = path.join(workSpacePath, Config.getRoot);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" file="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" line="91">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                ignoreFiles.push(path.join(workspacePath, ignoredPath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" file="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" line="91">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                ignoreFiles.push(path.join(workspacePath, ignoredPath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" file="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" line="104">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                mountRule[1] = path.resolve(workspacePath, mountRule[1]);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" file="/Users/zta/Documents/EC521/src/unzipped/GlysisSoftware-GSLiveCoder-1.1.0/extension/src/Helper.ts" line="104">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                mountRule[1] = path.resolve(workspacePath, mountRule[1]);
</failure>
		</testcase>
	</testsuite>
</testsuites>
