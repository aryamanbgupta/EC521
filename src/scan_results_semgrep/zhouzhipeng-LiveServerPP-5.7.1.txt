<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="10" tests="10" time="0.0">
	<testsuite disabled="0" errors="0" failures="10" name="semgrep results" skipped="0" tests="10" time="0">
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" line="18">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        const testPath = path.join(workSpacePath, Config_1.Config.getRoot);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" line="68">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                ignoreFiles.push(path.join(workspacePath, ignoredPath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" line="68">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                ignoreFiles.push(path.join(workspacePath, ignoredPath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" line="80">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                mountRule[1] = path.resolve(workspacePath, mountRule[1]);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/Helper.js" line="80">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                mountRule[1] = path.resolve(workspacePath, mountRule[1]);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" line="39">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            path.join(context.extensionPath, 'images/dir.svg'),
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" line="40">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">            path.join(context.extensionPath, 'images/file.svg')
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" line="314">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                name = path.normalize(path.join(vscode_1.workspace.rootPath, name));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/out/src/appModel.js" line="333">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        let urlpath = url.fsPath === path.sep ? path.join(url.fsPath, 'index.html') : url.fsPath;
</failure>
		</testcase>
		<testcase name="javascript.lang.security.detect-insecure-websocket.detect-insecure-websocket" classname="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/README.md" file="/Users/zta/Documents/EC521/src/unzipped/zhouzhipeng-LiveServerPP-5.7.1/extension/README.md" line="24">
			<failure type="ERROR" message="Insecure WebSocket Detected. WebSocket Secure (wss) should be used for all WebSocket connections.">ws://127.0.0.1:80/WSService
</failure>
		</testcase>
	</testsuite>
</testsuites>
