<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="10" tests="10" time="0.0">
	<testsuite disabled="0" errors="0" failures="10" name="semgrep results" skipped="0" tests="10" time="0">
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" line="13">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    var requestedPath = pathModule.resolve(originalPath, path);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" line="13">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    var requestedPath = pathModule.resolve(originalPath, path);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" line="13">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    var requestedPath = pathModule.resolve(originalPath, path);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/lib/sasslib/sass.node.js" line="43">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        requestedPath = pathModule.resolve(pathModule.dirname(request.previous.replace(/^\/sass\//, '')), request.current);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" line="133">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                    .map(file =&gt; path.join(AppModel.basePath, file));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" line="267">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                    generatedUri = path.join(path.dirname(filePath), savePath.substring(1));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" line="267">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                    generatedUri = path.join(path.dirname(filePath), savePath.substring(1));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" line="269">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                    generatedUri = path.join(workspaceRoot, savePath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" line="271">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                filePath = path.join(generatedUri, path.basename(filePath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" file="/Users/zta/Documents/EC521/src/unzipped/ritwickdey-live-sass-3.0.0/extension/out/src/appModel.js" line="271">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">                filePath = path.join(generatedUri, path.basename(filePath));
</failure>
		</testcase>
	</testsuite>
</testsuites>
