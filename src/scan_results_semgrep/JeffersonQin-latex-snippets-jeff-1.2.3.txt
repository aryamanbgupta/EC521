<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="11" tests="11" time="0.0">
	<testsuite disabled="0" errors="0" failures="11" name="semgrep results" skipped="0" tests="11" time="0">
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" line="423">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        range_label.innerHTML = range.value;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" line="426">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        range_label.innerHTML = range.value;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" line="430">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        range_label.innerHTML = range.value;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" line="434">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        range_label.innerHTML = range.value;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" line="438">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        range_label.innerHTML = range.value;
</failure>
		</testcase>
		<testcase name="javascript.browser.security.insecure-document-method.insecure-document-method" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/plotDots.js" line="535">
			<failure type="ERROR" message="User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities">        document.getElementById(&quot;output&quot;).innerHTML = tex_result;
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" line="138">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return path.join(context.extensionPath, relativePath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" line="138">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        return path.join(context.extensionPath, relativePath);
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" line="147">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        const diskPath = vscode.Uri.file(path.join(context.extensionPath, relativePath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" line="147">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">        const diskPath = vscode.Uri.file(path.join(context.extensionPath, relativePath));
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp" classname="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" file="/Users/zta/Documents/EC521/src/unzipped/JeffersonQin-latex-snippets-jeff-1.2.3/extension/src/util.js" line="104">
			<failure type="WARNING" message="RegExp() called with a `reg` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.">        reg = typeof reg === 'string' ? new RegExp(reg, 'm') : reg;
</failure>
		</testcase>
	</testsuite>
</testsuites>
