<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="4" tests="4" time="0.0">
	<testsuite disabled="0" errors="0" failures="4" name="semgrep results" skipped="0" tests="4" time="0">
		<testcase name="javascript.lang.security.detect-child-process.detect-child-process" classname="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" file="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" line="263">
			<failure type="ERROR" message="Detected calls to child_process from a function argument `argument`. This could lead to a command injection if the input is  user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ">        browser = child_process_1.exec(getOsCommand(selectedBrowser, argument), (error, stdout, stderr) =&gt; {
</failure>
		</testcase>
		<testcase name="javascript.lang.security.detect-child-process.detect-child-process" classname="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" file="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" line="263">
			<failure type="ERROR" message="Detected calls to child_process from a function argument `browserName`. This could lead to a command injection if the input is  user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ">        browser = child_process_1.exec(getOsCommand(selectedBrowser, argument), (error, stdout, stderr) =&gt; {
</failure>
		</testcase>
		<testcase name="javascript.lang.security.detect-child-process.detect-child-process" classname="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" file="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" line="269">
			<failure type="ERROR" message="Detected calls to child_process from a function argument `argument`. This could lead to a command injection if the input is  user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ">                child_process_1.exec(getDefaultBrowserCommand(argument), (error, stdout, stderr) =&gt; {
</failure>
		</testcase>
		<testcase name="javascript.lang.security.detect-child-process.detect-child-process" classname="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" file="/Users/zta/Documents/EC521/src/unzipped/igordvlpr-open-in-browser-1.0.2/extension/out/browsers.js" line="279">
			<failure type="ERROR" message="Detected calls to child_process from a function argument `argument`. This could lead to a command injection if the input is  user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ">        browser = child_process_1.exec(getDefaultBrowserCommand(argument), (error, stdout, stderr) =&gt; {
</failure>
		</testcase>
	</testsuite>
</testsuites>
