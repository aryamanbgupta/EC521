<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="3" tests="3" time="0.0">
	<testsuite disabled="0" errors="0" failures="3" name="semgrep results" skipped="0" tests="3" time="0">
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/smalike-proxy-0.1.0/extension/src/prepareProxy.js" file="/Users/zta/Documents/EC521/src/unzipped/smalike-proxy-0.1.0/extension/src/prepareProxy.js" line="49">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    const maybePublicPath = path.resolve(appPublicFolder, pathname.slice(1))
</failure>
		</testcase>
		<testcase name="javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal" classname="/Users/zta/Documents/EC521/src/unzipped/smalike-proxy-0.1.0/extension/src/prepareProxy.js" file="/Users/zta/Documents/EC521/src/unzipped/smalike-proxy-0.1.0/extension/src/prepareProxy.js" line="49">
			<failure type="WARNING" message="Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.">    const maybePublicPath = path.resolve(appPublicFolder, pathname.slice(1))
</failure>
		</testcase>
		<testcase name="javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage" classname="/Users/zta/Documents/EC521/src/unzipped/smalike-proxy-0.1.0/extension/src/proxy.js" file="/Users/zta/Documents/EC521/src/unzipped/smalike-proxy-0.1.0/extension/src/proxy.js" line="175">
			<failure type="INFO" message="A CSRF middleware was not detected in your express application. Ensure you are either using one  such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.">  const app = express();
</failure>
		</testcase>
	</testsuite>
</testsuites>
